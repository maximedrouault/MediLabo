services:
  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8000:8000"
    environment:
      ENCRYPT_KEY: ${ENCRYPT_KEY}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    healthcheck:
        test: "wget -qO- http://localhost:8000/actuator/health | grep -q 'UP' || exit 1"
        interval: 10s
        timeout: 5s
        retries: 5


  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test: "wget -qO- http://localhost:8761/actuator/health | grep -q 'UP' || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5


  gateway-server:
    build:
      context: ./gateway-server
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8100:8100"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: "wget -qO- http://localhost:8100/actuator/health | grep -q 'UP' || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5


  patient-db-server:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: patientdb
      POSTGRES_USER: ${PATIENT_DB_USER}
      POSTGRES_PASSWORD: ${PATIENT_DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - patient-db-data:/var/lib/postgresql/data
      - ./microservice-patient/initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: "pg_isready -h patient-db-server -p 5432 -U $${POSTGRES_USER}"
      interval: 10s
      timeout: 5s
      retries: 5


  patient-api:
    build:
      context: ./microservice-patient
      dockerfile: Dockerfile
    restart: always
    ports:
      - "9000:9000"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    deploy:
      replicas: 1
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      gateway-server:
        condition: service_healthy
      patient-db-server:
        condition: service_healthy
    healthcheck:
      test: "wget -qO- http://localhost:9000/actuator/health | grep -q 'UP' || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5


  note-db-server:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: notedb
      MONGO_INITDB_ROOT_USERNAME: ${NOTE_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${NOTE_DB_PASSWORD}
    volumes:
      - note-db-data:/data/db
      - note-db-config:/data/configdb
      - ./microservice-note/initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: "mongosh --quiet --eval 'db.runCommand({ ping: 1 })'"
      interval: 10s
      timeout: 5s
      retries: 5


  note-api:
    build:
      context: ./microservice-note
      dockerfile: Dockerfile
    restart: always
    ports:
      - "9100:9100"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    deploy:
      replicas: 1
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      gateway-server:
        condition: service_healthy
      note-db-server:
        condition: service_healthy
    healthcheck:
      test: "wget -qO- http://localhost:9100/actuator/health | grep -q 'UP' || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5


  assessment-api:
    build:
      context: ./microservice-assessment
      dockerfile: Dockerfile
    restart: always
    ports:
      - "9200:9200"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    deploy:
      replicas: 1
    depends_on:
      config-server:
          condition: service_healthy
      discovery-server:
          condition: service_healthy
      gateway-server:
          condition: service_healthy
      patient-db-server:
          condition: service_healthy
      patient-api:
          condition: service_healthy
      note-db-server:
          condition: service_healthy
      note-api:
          condition: service_healthy
    healthcheck:
      test: "wget -qO- http://localhost:9200/actuator/health | grep -q 'UP' || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5


  client-ui:
    build:
      context: ./microservice-clientui
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      gateway-server:
        condition: service_healthy
      patient-db-server:
        condition: service_healthy
      patient-api:
        condition: service_healthy
      note-db-server:
        condition: service_healthy
      note-api:
        condition: service_healthy
    healthcheck:
      test: |
        wget -qO- http://localhost:8080/actuator/health | grep -q 'UP' || exit 1
        wget -qO- http://gateway-server:8100/MICROSERVICE-PATIENT/actuator/health | grep -q 'UP' || exit 1
        wget -qO- http://gateway-server:8100/MICROSERVICE-NOTE/actuator/health | grep -q 'UP' || exit 1
        wget -qO- http://gateway-server:8100/MICROSERVICE-ASSESSMENT/actuator/health | grep -q 'UP' || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


volumes:
  patient-db-data:
  note-db-data:
  note-db-config: